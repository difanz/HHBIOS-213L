;	READ0.ASM (2.13L)
;	1995.1.24
;	1995.4.8
;	1999.11.2

SEG_A		SEGMENT
		ASSUME	CS:SEG_A, DS:SEG_A

		ORG	100H
START:		JMP	BEGIN

;子程序:读下一分区BOOT
READBOOT	PROC	NEAR
		MOV	SI,1BEH 		;分区表首
L_RB1:
		CMP	BYTE PTR [BX+SI+4],5	;判扩展分区
		JZ	L_RB2
		ADD	SI,10H			;转下一分区
		JMP	SHORT L_RB1
L_RB2:
		MOV	CX,[BX+SI+2]
		MOV	DX,[BX+SI]
		OR	DL,80H
		MOV	AX,201H
		INT	13H			;读下一分区BOOT
		RET
READBOOT	ENDP

;子程序:建立扇区链表 AL=字库名(J或F),BP=存放区
S_SET		PROC	NEAR
		CMP	AL,'F'
		JZ	L_SET0
		MOV	AL,' '
L_SET0:
		MOV	D_FILE[6],AL

		MOV	DX,OFFSET D_DTA 	;DTA地址
		MOV	DI,DX
		MOV	AH,1AH
		INT	21H
		MOV	DX,OFFSET D_FILE	;文件名
		MOV	AH,11H			;查找目录项
		INT	21H
		OR	AL,AL
		JZ	L_SETA
		STC
		RET
L_SETA:
		MOV	AX,[DI+1BH]		;首簇号
		PUSH	AX
		SUB	AX,2
		MUL	WORD PTR DS:[0F0H]	;每簇扇区数
		ADD	AX,DS:[0F4H]		;文件区首扇区号
		ADC	DX,0
		MOV	DS:[BP],AX
		MOV	DS:[BP+2],DX
		POP	AX
		MOV	WORD PTR DS:[0F6H],0
L_SET1:
		PUSH	AX
		INC	WORD PTR DS:[0F6H]
		MOV	SI,AX
		CMP	BYTE PTR DS:[0FFH],1	;判12位FAT?
		JZ	L_SET3
		MOV	ES,DS:[0F8H]
		ADD	SI,AX
		JNB	L_SET2
		MOV	ES,DS:[0FAH]
L_SET2:
		MOV	AX,ES:[SI]
		CMP	AX,0FFF8H
		JMP	SHORT L_SET6
L_SET3:
		SHR	AX,1
		PUSHF
		ADD	SI,AX
		MOV	AX,ES:[SI]
		POPF
		JNB	L_SET4
		MOV	CL,4
		SHR	AX,CL
		JMP	SHORT L_SET5
L_SET4:
		AND	AX,0FFFH
L_SET5:
		CMP	AX,0FF8H
L_SET6:
		POP	SI
		JB	L_SET7
		MOV	AX,0FFFFH
		MOV	DS:[BP+4],AX
		ADD	BP,6
		CLC
		RET
L_SET7:
		INC	SI
		CMP	AX,SI
		JE	L_SET1

		PUSH	AX
		MOV	AX,DS:[0F0H]
		MUL	WORD PTR DS:[0F6H]
		MOV	DS:[BP+4],AX
		MOV	WORD PTR DS:[0F6H],0
		MOV	AX,DS:[0F0H]
		POP	SI
		PUSH	SI
		SUB	SI,2
		MUL	SI
		ADD	AX,DS:[0F4H]
		ADC	DX,0
		ADD	BP,6
		MOV	DS:[BP],AX
		MOV	DS:[BP+2],DX
		POP	AX
		JMP	SHORT L_SET1
S_SET		ENDP

		ORG	230H
D_020A		DW	0			;扇区字节数
D_020C		DW	0			;每道扇区数
D_020E		DW	0			;磁头数
D_0225		DB	2			;当前盘
D_0226		DW	0			;分区首扇区号
D_0228		DW	0			;      磁柱号

	INCLUDE EXIT.INC

S_EX		PROC	NEAR
		RET
S_EX		ENDP

INT_7F		PROC	FAR
		STI
		CLD
		PUSH	DS
		PUSH	ES
		PUSH	AX
		PUSH	BX
		PUSH	CX
		PUSH	SI
		PUSH	DI
		PUSH	CS
		POP	DS
		PUSH	CS
		POP	ES

		MOV	BX,D_JT
		OR	AH,AH			;=0繁体
		JNZ	L_1			;非0简体
		MOV	BX,D_FT
L_1:
		AND	DX,7F7FH
		SUB	DX,2121H
		MOV	AL,94
		MUL	DH
		XOR	DH,DH
		ADD	AX,DX
		XOR	DX,DX
		MOV	CX,10H			;每扇区16个汉字
		DIV	CX
		PUSH	DX
L_10:
		CMP	AX,DS:[BX+4]
		JB	L_20
		SUB	AX,DS:[BX+4]
		ADD	BX,6
		JMP	SHORT L_10
L_20:
		MOV	DX,DS:[BX+2]
		ADD	AX,DS:[BX]
		ADC	DX,0
		DIV	D_020C			;每道扇区数
		ADD	DX,D_0226		;加分区首扇区号
		CMP	DX,D_020C
		JBE	L_30
		MOV	DX,1
		INC	AX
L_30:
		MOV	CL,DL			;→扇区号

		XOR	DX,DX
		DIV	D_020E			;磁头数
		MOV	DH,DL			;→磁头号
		ADD	AX,D_0228		;加分区首磁柱号
		MOV	CH,AL			;→磁柱号
		MOV	AL,40H
		MUL	AH
		ADD	CL,AL			;高2位→CL
		MOV	DL,80H
		MOV	BX,30H
		MOV	AX,201H
		INT	13H

		POP	AX
		MOV	DX,CS
		ADD	DX,AX
		ADD	DX,AX
		ADD	DX,3
		MOV	CX,20H
		MUL	CL
		ADD	AX,30H
		MOV	SI,AX
		XOR	DI,DI
		REP	MOVSB			;复制到CS:0

		PUSH	CS
		POP	DX
		POP	DI
		POP	SI
		POP	CX
		POP	BX
		POP	AX
		POP	ES
		POP	DS
		IRET
INT_7F		ENDP

D_JT		DW	0			;简体扇区链表首
D_FT		DW	0			;繁体扇区链表首
D_BUF		DB	512 DUP (0)

;程序开始执行****************************************************************
;格式:READ0 [J][F]	(J为简体,F为繁体)

BEGIN:
		MOV	AX,4A06H
		MOV	SI,3			;取驻留状态
		INT	2FH
		CMP	BX,4A06H		;判是否已驻留?
		JNZ	L_S10
		MOV	DX,OFFSET D_ALREADY
L_ERR:
		MOV	AH,9
		INT	21H
		MOV	AX,4C01H
		INT	21H
L_S10:
		MOV	AH,19H			;取当前盘
		INT	21H
		CMP	AL,2			;判硬盘?
		JNB	L_S20
		MOV	DX,OFFSET D_FDISK
		JMP	SHORT L_ERR
L_S20:
		MOV	D_0225,AL		;当前盘号
		INC	AL
		MOV	D_FILE,AL
		MOV	AX,201H
		MOV	BX,OFFSET D_DTA+100H
		MOV	CX,1
		MOV	DX,80H
		INT	13H

		DEC	D_0225
L_S30:
		DEC	D_0225
		JZ	L_S32
		CALL	READBOOT		;读下一分区BOOT
		JMP	SHORT L_S30
L_S32:
		PUSH	CX
		MOV	DL,CH			;磁柱号低8位
		XOR	CH,CH
		SHL	CX,1			;磁柱号高2位移CH
		SHL	CX,1
		MOV	DH,CH
		POP	CX
		AND	CX,3FH
		MOV	D_0226,CX		;分区首扇区号
		MOV	D_0228,DX		;      磁柱号

		MOV	SI,1BEH
L_S40:
		MOV	AL,DS:[BX+SI+4]
		CMP	AL,1
		JZ	L_S42
		CMP	AL,4
		JZ	L_S42
		CMP	AL,6
		JZ	L_S42
		ADD	SI,10H
		JMP	SHORT L_S40
L_S42:
		MOV	DS:[0FFH],AL
		MOV	CX,[BX+SI+2]
		MOV	DX,[BX+SI]
		OR	DL,80H
		MOV	AX,201H
		INT	13H

		PUSH	DX
		MOV	AX,[BX+0BH]		;扇区字节数
		MOV	D_020A,AX
		MOV	AX,[BX+18H]		;每道扇区数
		MOV	D_020C,AX
		MOV	AX,[BX+1AH]		;磁头数
		MOV	D_020E,AX
		MOV	AL,[BX+0DH]		;每簇扇区数
		XOR	AH,AH
		MOV	DS:[0F0H],AX
		MOV	AX,[BX+16H]		;FAT扇区数
		MUL	BYTE PTR [BX+10H]
		ADD	AX,[BX+0EH]		;+保留扇区数
		ADD	AX,[BX+1CH]		;+隐含扇区数
		MOV	DS:[0F4H],AX
		MOV	AX,20H
		MUL	WORD PTR [BX+11H]	;根目录项数
		DIV	D_020A
		ADD	DS:[0F4H],AX
		POP	DX

		MOV	AX,CS
		CMP	AX,0A000H
		JB	L_S52
		PUSH	BX
		MOV	AH,52H
		INT	21H
		MOV	AX,ES:[BX-2]
		POP	BX
L_S50:
		MOV	ES,AX
		INC	AX
		ADD	AX,ES:[3]
		CMP	AX,7000H
		JB	L_S50
		SUB	AX,ES:[3]
L_S52:
		ADD	AX,1000H
		MOV	DS:[0F8H],AX		;FAT读入第一段
		MOV	ES,AX
		ADD	AX,1000H
		MOV	DS:[0FAH],AX		;FAT读入第二段

		MOV	AX,[BX+16H]		;每FAT扇区数
		PUSH	AX
		CMP	AX,80H			;		4.8
		JBE	L_S60
		MOV	AL,80H
L_S60:
		XOR	BX,BX
		INC	CX
		MOV	AH,2
		INT	13H			;读FAT
		ADD	CL,80H
		MOV	AL,CL
		XOR	AH,AH
		DIV	BYTE PTR D_020C 	;每道扇区数
		MOV	CL,AH
		ADD	AL,DH
		XOR	AH,AH
		DIV	BYTE PTR D_020E 	;磁头数
		MOV	DH,AH
		ADD	CH,AL
		POP	AX

		CMP	AX,80H			;判FAT超64K?	4.8
		JBE	L_S70
		SUB	AL,80H
		MOV	ES,DS:[0FAH]		;FAT读入第二段
		XOR	BX,BX
		MOV	AH,2
		INT	13H
L_S70:
		MOV	ES,DS:[0F8H]		;指向FAT首
		MOV	BP,OFFSET D_BUF 	;扇区链表首

		MOV	SI,5DH			;1.23
		MOV	AX,CS
		CMP	AX,0A000H		;LH?
		JB	L_S80
		MOV	SI,6DH
L_S80:
		LODSW
		AND	AX,5F5FH
		MOV	DS:[101H],AX		;保存
		CMP	AL,'J'
		JZ	L_S82
		CMP	AL,'F'
		JZ	L_S82
		MOV	AL,'J'
		MOV	DS:[101H],AL
L_S82:
		MOV	D_JT,BP
		MOV	D_FT,BP
		CALL	S_SET			;建FAT索引表
		JNB	L_S84
		MOV	DX,OFFSET D_NOFILE
		JMP	L_ERR
L_S84:
		MOV	AL,DS:[102H]		;第二字库
		CMP	AL,'J'
		JNZ	L_S90
		MOV	D_JT,BP
		JMP	SHORT L_S92
L_S90:
		CMP	AL,'F'
		JNZ	L_S94
		MOV	D_FT,BP
L_S92:
		CALL	S_SET			;建FAT索引表
L_S94:
		PUSH	BP
		MOV	DX,OFFSET INT_7F
		MOV	AX,257FH
		INT	21H

	INCLUDE EXIT1.INC			;1.24

		POP	DX
		MOV	BYTE PTR DS:[100H],'0'
		INT	27H

D_FILE		DB	3,'HZK16      '
		DB	20 DUP (0)
D_ALREADY	DB	'READ0 IS ALREADY!',7,13,10,'$'
D_NOFILE	DB	'NOT FOUND THE FILE!',7,13,10,'$'
D_FDISK 	DB	'READ0 NOT INSTALL TO FLOPYDISK!',7,13,10,'$'
D_DTA	EQU	$

SEG_A		ENDS
		END	START
